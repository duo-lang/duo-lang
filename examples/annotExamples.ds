# Examples which illustrate type annotations on toplevel declarations.

data Nat { Zero, Succ(Nat) };

codata NatFun { Ap(Nat)[Nat] };

# Symmetric system:

prd idPoly : forall a. { 'Ap(a)[a] } := comatch { 'Ap(x)[k] => x >> k };

prd idPolyTwo : forall a b. { 'Ap(a /\ b)[a \/ b] } := comatch { 'Ap(x)[k] => x >> k };

prd id : { 'Ap(Nat)[Nat] } := comatch { 'Ap(x)[k] => x >> k };

prd idNominal : NatFun := comatch { Ap(x)[k] => x >> k };

# Asymmetric system:

def idPoly : forall a. { 'Ap(a)[a] } := comatch { 'Ap(x) => x };

def idPolyTwo : forall a b. { 'Ap(a /\ b)[a \/ b] } := comatch { 'Ap(x) => x };

def id : { 'Ap(Nat)[Nat] } := comatch { 'Ap(x) => x };

def idNominal : NatFun := comatch { Ap(x) => x };
