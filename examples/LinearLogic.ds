import Function;

-- Positive Disjunction and its Unit
data Plus(+a : CBV, +b : CBV) : CBV {
    Left(a),
    Right(b)
};

data Void : CBV {};

-- Positive Conjunction and its Unit
data Tensor(+a : CBV, +b : CBV) : CBV {
    MkTensor(a, b)
};

prd fst := \p => case p of { MkTensor(x,y) => x};
prd snd := \p => case p of { MkTensor(x,y) => y};

data Unit : CBV { MkUnit };

-- Negative Conjunction and its Unit
codata With(+a : CBV, +b : CBV) : CBN {
    Proj1[a],
    Proj2[a]
};

prd pair := \x y => cocase { Proj1[*] => x, Proj2[*] => y};

codata UnitN : CBV {};

-- Negative Disjunction and its Unit
codata Par(+a : CBV, +b : CBV) : CBN {
    MkPar[a,b]
};

prd return : forall a. a -> Bot ⅋ a :=
  \x => cocase { MkPar[err,*] => x };

prd throw : forall a. a -> a ⅋ Bot :=
  \x => cocase { MkPar[*,res] => x };

codata VoidN : CBV { MkVoidN };
