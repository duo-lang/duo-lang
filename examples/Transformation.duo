module Transformation;

-- import Data.Peano;
-- import Data.Maybe;
import Data.Cofunction;
import Codata.Function;

data Nat {
    Z,
    S(Nat)
};


data Bool {
    True,
    False
};


-- typ passt nicht 
def cns ifThenElse : CoFun(Nat,Bool) := \k =< case {
    True => Z >> k,
    False => S(Z) >> k
};


codata CoBool {
    IfThenElse(return Nat)
};




def prd true : (CoBool:CBN) := cocase {IfThenElse(k) => Z >> k};
def prd false : CoBool := cocase {IfThenElse(*) => S(Z)};

--def cmd withData := #Print(ifThenElse True, #ExitSuccess);
def cmd withCodata := #Print(true.IfThenElse(*),#ExitSuccess);

def cmd main := withCodata;