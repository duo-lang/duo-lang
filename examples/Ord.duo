module Ord;

import Data.Bool;

data Ordering : CBV {
    LT,
    EQ,
    GT
};

class Ord(+a : CBV) {
    Compare(a, a, return Ordering)
};

instance ordOrdering : Ord Ordering {
    Compare(x,y,k) => case x of {
        LT => case y of {
            LT => EQ,
            EQ => LT,
            GT => LT
        },
        EQ => case y of {
            LT => GT,
            EQ => EQ,
            GT => LT
        },
        GT => case y of {
            LT => GT,
            EQ => GT,
            GT => EQ
        }
    } >> k
};

instance ordBool : Ord Bool {
    Compare(x,y,k) => case x of {
        True => case y of {
            True => EQ,
            False => GT
        },
        False => case y of {
            True => LT,
            False => EQ
        }
    } >> k
};

def prd cmp : forall a. Ord a => a -> a -> Ordering :=
    \x y => mu k. Compare(x,y,k);
