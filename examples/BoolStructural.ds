-- Booleans (Structural)

import Function;

constructor True;
constructor False;

-- Boolean negation.
def not[*] : < False, True > -> < False, True >:=
  \b => case b of { True => False,
                    False => True
                  };

-- Boolean if-then-else
def ifthenelse[*] : forall a. < False, True > -> a -> a -> a :=
  \b e1 e2 => case b of { True => e1, False => e2 };

-- Boolean conjunction
def and[*] :=
  \b1 b2 => ifthenelse b1 b2 False;

-- Boolean disjunction
def or[*] :=
  \b1 b2 => ifthenelse b1 True b2;

-- Boolean nand
def nand[*] :=
  \b1 b2 => not (and b1 b2);

-- Boolean nor
def nor[*] :=
  \b1 b2 => not (or b1 b2);

-- Boolean implication
def impl[*] :=
  \b1 b2 => case b1 of {
      True => b2,
      False => True
  };
