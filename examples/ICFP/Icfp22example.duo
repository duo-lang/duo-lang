module ICFP.Icfp22example;

import Codata.Function;
import Codata.With;
import Data.Unit;
import Data.Plus;

-- example from Fig. 3 from "Introduction and Elimination, Left and Right"
def prd right : forall a. (Unit & a) & a -> Plus(Unit,Plus(Plus(a,Unit),Unit))  := 
   cocase { Ap(x,k) =>  Right(Left(Left(x.Proj1(*).Proj2(*)))) >> k };

def prd intro : forall a. (Unit & a) & a -> Plus(Unit,Plus(Plus(a,Unit),Unit))  := 
   cocase { Ap(x,k) => x >> Proj1(Proj2(mu y. Right(Left(Left(y))) >> k ))} ;

def prd left :  forall a. (Unit & a) & a -> Plus(Unit,Plus(Plus(a,Unit),Unit))  := 
   cocase { Ap(x,k) => x >> Proj1(Proj2(Left(*) ;; Left(*) ;; Right(*) ;; k ))} ;     

def prd elim  :  forall a. (Unit & a) & a -> Plus(Unit,Plus(Plus(a,Unit),Unit))  := 
   cocase { Ap(x,k) => x.Proj1(*).Proj2(*) >> Left(*) ;; Left(*) ;; Right(*) ;; k } ;     
