import Function;
-- import Cofunction;
import Peano;

data CoFun : (-f : CBV, +e : CBV) -> CBV {
    CoAp(return f,e)
};

def cns foo  := case {CoAp(k1,*) => k1}; 

def rec prd compose := \f g x => f (g x);

def rec prd peirce  := cocase {
   Ap(x1,k1) => 
      (mu k5.((mu k4.((x1) >> Ap( cocase {Ap(x2,k2) => (mu k3.((x2) >> k5)) >> k2} , k4 ))) >> k5))
      >>
      k1};


--def cns copeirce : forall a b. ((a -< b) -< a) -< a := 
--  \y =< mu k. k >> (y (\x =< mu c.k >> x)) ;

--def prd copeircedesugared  := cocase {
--   CoCoAp(k1,x1) => 
--      (mu k5.(
--         (mu k4.((x1) >> CoCoAp( k4 , cocase {CoCoAp(k2,x2) => (mu k3.((x2) >> k5)) >> k2} )))
--         >>
--         k5))
--      >>
--      k1};

