# Standard Prelude

# Bool

destructor Ap : CBN;

data Bool : CBV { True, False };

prd not := \b => case b of { True => False, False => True};

prd ifthenelse := \b => \e1 => \e2 => case b of { True => e1, False => e2 };

prd and := \b1 => \b2 => ifthenelse b1 b2 False;

prd or := \b1 => \b2 => ifthenelse b1 True b2;

# # Peano natural numbers

data Nat : CBV { Z, S(Nat) };

prd rec add := \n => \m => case n of { Z => m
                                     , S(n) => S(add n m)};

prd rec mul := \n => \m => case n of { Z => Z
                                     , S(n) => add m (mul n m)};

prd rec nateq := \n => \m => case n of { Z => case m of { Z => True, S(m) => False}
                                       , S(n) => case m of { Z => False, S(m) => nateq n m}};

# # Unit

data Unit : CBV { Unit };


# # Other functions

prd id := \x => x;

# # Generic print consumer
cns print := mu x.Print(x); Done;