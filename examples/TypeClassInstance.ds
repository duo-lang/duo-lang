
import Bool;
import Peano;
import List;

-- | Class definition.
class Eq(+a : CBV) {
  Equals(a, a, return Bool),
  Differ(a, a, return Bool)
};


-- | Bool instance definition.
instance Eq Bool {
  Equals(x, y, k) => or (and x y) (not (or x y)) >> k,
  Differ(x, y, k) => and (or x y) (not (and x y)) >> k
};

-- | Nat instance definition.
instance Eq Nat {
  Equals(x, y, k) => nateq x y >> k,
  Differ(x, y, k) => not (nateq x y) >> k
};

class PrintExit(+a : CBV) {
  Show(a)
};

instance PrintExit Bool {
  Show(x) => Print(x); ExitSuccess
};

def cmd main := Show(True);
