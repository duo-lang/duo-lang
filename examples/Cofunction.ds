data CoFun : (+f : CBV, -e : CBV) -> CBV {
    CoAp(return f,e)
};

type operator -< rightassoc at 0 := CoFun;

def cns id : forall a. a -< a  :=
  case { CoAp(f,e) => e >>f };

def cns id2  := \x =< x; 

def cns compose : forall a b c . (a -< b) -<  (b -< c) -< (a -< c) :=
      \f g x =< f (g x);

  

