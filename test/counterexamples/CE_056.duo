import Function;
import Bool;
import Peano;

-- Subsumptions which shouldn't hold

def rec prd ex16    : {}                                                                    := ex16;
def rec prd ex16sub : <>                                                                    := ex16;

def rec prd ex17    : { Ap(< True >,return < True >) }                                      := ex17;
def rec prd ex17sub : forall a. { Ap(a,return a) }                                          := ex17;

def rec prd ex18    : { Ap(< True >,return < True , False >) }                              := ex18;
def rec prd ex18sub : { Ap(< True >,return < True >) }                                      := ex18;

def rec prd ex19    : Nat                                                                   := ex19;
def rec prd ex19sub : Bool                                                                  := ex19;

def rec prd ex20    : { Ap(rec a. < Z, S( <S(a)> ) >, return (rec a.  <Z, S(< S(a) >)>) ) } := ex20;
def rec prd ex20sub : { Ap(rec a.  <Z, S(a)>, return (rec a. < Z, S(a) >) ) }               := ex20;

def rec prd ex21    : (rec b. < Z , S( b ) > ) -> (rec c. < Z , S( c ) > )                  := ex21;
def rec prd ex21sub : forall t0. (t0 -> (rec r4.(t0 \/ < S( r4 ) >)))                       := ex21;
