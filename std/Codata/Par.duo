module Codata.Par;

import Codata.Function;

-- | Disjunction as a codata type.
codata Par : (+a : CBV, +b : CBV) -> CBV {
    MkPar(return a, return b)
};


type operator ⅋ leftassoc at 3 := Par;

-- | Injection into the right element of Par.
def prd unit : forall a. a -> Bot ⅋ a :=
  \x => cocase { MkPar(k_err,*) => x };

-- | Injection into the left element of Par.
def prd throw : forall a. a -> a ⅋ Bot :=
  \x => cocase { MkPar(*,k_res) => x };
