module Class.Ord;

import Data.Bool;

-- | Enum type for the order two elements can be related to each other.
data Ordering : CBV {
    LT,
    EQ,
    GT
};

-- | Definition for type class of ordered types.
class Ord(+a : CBV) {
    Compare(a, a, return Ordering)
};

-- | Trivial Ord instance for the /Ordering/ data type.
instance Ord Ordering {
    Compare(x,y,k) => case x of {
        LT => case y of {
            LT => EQ,
            EQ => LT,
            GT => LT
        },
        EQ => case y of {
            LT => GT,
            EQ => EQ,
            GT => LT
        },
        GT => case y of {
            LT => GT,
            EQ => GT,
            GT => EQ
        }
    } >> k
};

-- | Ordering of Booleans with /False/ < /True/.
instance Ord Bool {
    Compare(x,y,k) => case x of {
        True => case y of {
            True => EQ,
            False => GT
        },
        False => case y of {
            True => LT,
            False => EQ
        }
    } >> k
};